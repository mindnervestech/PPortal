<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
		http://www.springframework.org/schema/cache">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- <cache:annotation-driven /> -->
	<!-- <beans:bean name="cacheManager" class="com.google.code.ssm.spring.ExtendedSSMCacheManager">
    <beans:property name="caches">
      <beans:set>
        <beans:bean class="com.google.code.ssm.spring.SSMCache">
          <beans:constructor-arg name="cache" index="0" ref="defaultCache" />
          5 minutes
          <beans:constructor-arg name="expiration" index="1" value="300" />
          @CacheEvict(..., "allEntries" = true) won't work because allowClear is false, 
           so we won't flush accidentally all entries from memcached instance
          <beans:constructor-arg name="allowClear" index="2" value="false" />
        </beans:bean>
      </beans:set>
    </beans:property>
  </beans:bean>

  <beans:bean name="defaultCache" class="com.google.code.ssm.CacheFactory">
    <beans:property name="cacheName" value="defaultCache" />
    <beans:property name="cacheClientFactory">
      <beans:bean name="cacheClientFactory" class="com.google.code.ssm.providers.xmemcached.MemcacheClientFactoryImpl" />
    </beans:property>
    <beans:property name="addressProvider">
      <beans:bean class="com.google.code.ssm.config.DefaultAddressProvider">
        <beans:property name="address" value="127.0.0.1:11211" />
      </beans:bean>
    </beans:property>
    <beans:property name="configuration">
      <beans:bean class="com.google.code.ssm.providers.CacheConfiguration">
        <beans:property name="consistentHashing" value="true" />
      </beans:bean>
    </beans:property>
  </beans:bean> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Factory bean that creates the Mongo instance -->
    <beans:bean id="mongo" class="org.springframework.data.mongodb.core.MongoFactoryBean">
        <beans:property name="host" value="localhost" />
    </beans:bean>
    
    <beans:bean id="mongoCredentials" class="org.springframework.data.authentication.UserCredentials">
        <beans:constructor-arg name="username" value="root" />
        <beans:constructor-arg name="password" value="root" />
    </beans:bean>
     
    <!-- MongoTemplate for connecting and quering the documents in the database -->
    <beans:bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <beans:constructor-arg name="mongo" ref="mongo" />
        <beans:constructor-arg name="databaseName" value="emr-portal" />
        <beans:constructor-arg name="userCredentials" ref="mongoCredentials"/>
    </beans:bean>
    
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.mnt" />
	
	<beans:bean id="jacksonMessageConverter"
    class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></beans:bean>
    <beans:bean
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jacksonMessageConverter" />
            </beans:list>
        </beans:property>
    </beans:bean> 

	<beans:import resource="classpath:spring-quartz.xml"/>
	<beans:import resource="classpath:spring-mail.xml"/>
</beans:beans>
